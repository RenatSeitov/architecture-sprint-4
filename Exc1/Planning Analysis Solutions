### Планирование: анализ, идентификация проблем и поиск решений

#### **Анализ системы и выявление проблем**

##### **1. Инфраструктура:**

- **Одиночные инстансы приложений:** У каждого приложения и базы данных только один инстанс. Это создает единую точку отказа.
- **Слабая масштабируемость:** При росте нагрузки единственный инстанс может не справляться, особенно в пиковые периоды (например, "Черная пятница").

##### **2. CI/CD:**

- **Ручной деплой в release и prod:** Это увеличивает вероятность человеческой ошибки и замедляет процесс развертывания.
- **Отсутствие автоматизированного тестирования на уровне интеграции и end-to-end:** Может привести к появлению ошибок на продакшене.

##### **3. Статусы заказов:**

- **Ручное управление статусом "CLOSED":** В CRM статус заказа закрывается вручную или через сообщение транспортной компании. Это может привести к ошибкам или задержкам.
- **Разные системы управления статусами:** Разные системы управляют своими статусами заказов, что создает сложность в их синхронизации.

##### **4. Обработка 3D-файлов:**

- **Потенциальная перегрузка "3D Files Storage":** Хранилище 3D-файлов не оптимизировано под интенсивные запросы.
- **Отсутствие мониторинга:** Нет указания на мониторинг использования ресурсов хранилища.

##### **5. Мониторинг и логирование:**

- **Недостаточный мониторинг:** Отсутствие упоминания о централизованной системе мониторинга (например, Prometheus/Grafana).
- **Разрозненные логи:** Логи разных приложений, вероятно, хранятся отдельно, что затрудняет анализ инцидентов.

##### **6. Асинхронная обработка сообщений:**

- **RabbitMQ как единственная точка отказа:** Нет информации о настройке кластера или репликации для отказоустойчивости.

#### **Предлагаемые инициативы**

1. **Масштабируемость и отказоустойчивость:**

   - Добавить горизонтальное масштабирование для приложений через использование нескольких инстансов.
   - Настроить репликацию для баз данных.
   - Внедрить кластеризацию RabbitMQ для повышения отказоустойчивости.

2. **CI/CD:**

   - Автоматизировать деплой в release и prod.
   - Внедрить интеграционные и end-to-end тесты для проверки сценариев.

3. **Мониторинг и логирование:**

   - Внедрить централизованное логирование (например, ELK Stack или Loki).
   - Настроить мониторинг метрик приложений и инфраструктуры с использованием Prometheus/Grafana.

4. **Обработка статусов заказов:**

   - Автоматизировать управление статусом "CLOSED" в CRM.
   - Внедрить общую систему трекинга статусов заказов для согласованности.

5. **Оптимизация работы с файлами:**

   - Настроить кэширование и распределение нагрузки для "3D Files Storage".
   - Добавить мониторинг использования хранилища.

#### **Приоритизация инициатив**

1. **Масштабируемость и отказоустойчивость (приоритет высокий):**
   - Единственные инстансы приложений и RabbitMQ представляют высокий риск отказа системы.
2. **CI/CD (приоритет средний):**
   - Ручной деплой замедляет выход новых версий и создает риск ошибок.
3. **Мониторинг и логирование (приоритет средний):**
   - Наличие централизованных логов и метрик позволяет быстро реагировать на инциденты.
4. **Автоматизация статусов заказов (приоритет средний):**
   - Позволяет снизить риск ошибок при ручной обработке.
5. **Оптимизация работы с файлами (приоритет низкий):**
   - Зависит от текущей нагрузки на хранилище.

#### **Целевая архитектура через полгода**

- Приложения и базы данных работают в отказоустойчивом режиме (несколько инстансов).
- Настроен автоматический деплой во все окружения с интеграционными тестами.
- Система мониторинга и централизованного логирования позволяет отслеживать производительность и ошибки.
- Упрощена и автоматизирована обработка статусов заказов.
- Оптимизирована работа с 3D-файлами.

#### **Три ключевые инициативы на ближайшие полгода**

1. **Масштабируемость и отказоустойчивость:**
   - Устранение единой точки отказа критически важно для стабильной работы системы.
2. **Автоматизация CI/CD:**
   - Ускорит выход обновлений и минимизирует вероятность ошибок.
3. **Мониторинг и логирование:**
   - Позволит оперативно реагировать на инциденты и устранять узкие места.


